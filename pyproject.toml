[tool.poetry]
name = "stacks-data"
version = "1.0.1"
description = "A suite of utilities to support data engineering workloads within an Ensono Stacks data platform."
authors = [
    "Ensono Stacks <stacks@ensono.com>"
]
readme = "README.md"
homepage = "https://github.com/Ensono/stacks-data"
packages = [
    { include = "stacks" },
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.7"
pyspark = "^3.4.3"
jsonschema = "^4.23.0"
azure-identity = "^1.17.1"
azure-mgmt-datafactory = "^3.1.0"
azure-storage-file-datalake = "^12.16.0"
click-loglevel = "^0.4.0.post1"
colorlog = "^6.8.2"
polling2 = "^0.5.0"
jinja2 = "^3.1.4"
pyyaml = "^6.0.2"
great-expectations = "^0.17.23"
pydantic = "^1.10.18"
delta-spark = "^2.4.0"
behave = "^1.2.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
black = ">=23.12.1,<25.0.0"
pre-commit = "^3.8.0"
flake8 = "^6.1.0"
flake8-docstrings = "^1.7.0"
pydocstyle = "^6.3.0"
tomli = "^2.0.1"
pytest-mock = "^3.14.0"
coverage = "^7.6.1"

[tool.poetry.scripts]
datastacks = "stacks.data.cli.datastacks_cli:cli"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
filterwarnings = [
    # Ignore warning for use of typing.io in Pyspark
    "ignore: typing.io is deprecated:DeprecationWarning",

    # Ignore warnings for deprecated modules in Great expectations
    "ignore: module 'sre_constants' is deprecated:DeprecationWarning",
    "ignore: module 'sre_parse' is deprecated:DeprecationWarning",
]

[tool.black]
    line-length = 120
    target-version = ['py310']
    exclude = '''
    /(
        \.git
      | \.venv
    )/
    '''

[tool.flake8]
max-line-length = "120"
exclude = ".venv,.git"

[tool.pydocstyle]
convention = "google"
add-ignore = "D100,D101,D104"
match = "(?!test_|conftest).*\\.py"
match_dir = "^(?!(tests)).*"
