name: Build and publish to PyPI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'tests/**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install poetry
        run: |
          python -m pip install poetry==1.8.3

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - name: Create GitHub Release Tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_TAG=$(poetry version --short)
          gh release create $NEW_TAG

      - name: Build Python Project
        run: |
          poetry build

      - name: Publish to PyPi Test
        env:
          PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
        run: |
          poetry config pypi-token.test-pypi $PYPI_TEST_TOKEN
          poetry publish -r test-pypi

      - name: Publish to PyPi
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish -r pypi
