name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'stacks/**'

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: "latest"

    - name: Setup a local virtual environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install

    - name: Run the automated tests
      run: poetry run python -m pytest tests

  build-and-publish:
    runs-on: ubuntu-24.04
    needs:
      - test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: "latest"

    - name: Setup a local virtual environment
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        NEW_TAG=$(poetry version --short)
        gh release create $NEW_TAG

    - name: Build Python Project
      run: |
        poetry build

    - name: Publish to PyPi
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish
